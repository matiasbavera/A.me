{"version":3,"sources":["portfolio/Footer.tsx","portfolio/Header.tsx","portfolio/Projects.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Footer","id","href","className","title","Header","src","Projects","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"iRAgEeA,G,uBA7DA,WACb,OACE,oCACE,6BAASC,GAAG,UACV,yBAAKA,GAAG,aACN,wCACc,uBAAGC,KAAK,KAAR,WAEd,wBAAIC,UAAU,kBACZ,uBACEA,UAAU,8BACVC,MAAM,SACNF,KAAK,iCAEP,uBACEC,UAAU,4BACVC,MAAM,WACNF,KAAK,yCAEP,uBACEC,UAAU,4BACVC,MAAM,UACNF,KAAK,qCAIX,6BACE,2BACE,gDAEF,4BACE,4BACE,uBAAGA,KAAK,0CAAR,kBACA,yBAAKC,UAAU,WAAf,WAIN,6BACE,2BACE,yCAEF,4BACE,4BACE,uBAAGD,KAAK,IAAR,WAIN,6BACE,2BACE,4CAEF,4BACE,4BACE,uBAAGA,KAAK,IAAR,eCpCCG,G,KAjBA,WACb,OACE,6BACE,yBAAKF,UAAU,mBACb,yBAAKG,IAAI,8BACT,6CACA,+DACwC,IACtC,uBAAGJ,KAAK,+BACN,4BAAQC,UAAU,UAAlB,YACG,SCqFAI,EA9FE,WACf,OACE,oCACE,gDACA,yBAAKN,GAAG,YACR,yBAAKA,GAAG,YACN,kBAAC,EAAD,MACA,yBAAKE,UAAS,uBACZ,yBAAKA,UAAU,aAAaG,IAAI,8CAChC,yBAAKH,UAAU,eACb,4BACE,uBAAGD,KAAK,iCAAR,uBADF,WAEE,uBACEC,UAAU,8BACVC,MAAM,SACNF,KAAK,4CAGT,4BACG,IADH,kGAIA,yIAGA,6BACA,2BACE,0BAAMC,UAAU,OAAhB,SACA,0BAAMA,UAAU,OAAhB,cACA,0BAAMA,UAAU,OAAhB,WACA,0BAAMA,UAAU,OAAhB,QACA,0BAAMA,UAAU,OAAhB,UACA,0BAAMA,UAAU,OAAhB,iBAKN,yBAAKA,UAAS,uBACZ,yBAAKA,UAAU,aAAaG,IAAI,kCAChC,yBAAKH,UAAU,eACb,4BACE,uBAAGD,KAAK,IAAR,2BADF,WAEE,uBACEC,UAAU,8BACVC,MAAM,SACNF,KAAK,6DAGT,4BACG,IADH,iCAIA,8GAGA,6BACA,2BACE,0BAAMC,UAAU,OAAhB,oBC7CCK,MATf,WACE,OACE,yBAAKL,UAAU,OACb,kBAAC,EAAD,MACA,kBAAC,EAAD,QCCcM,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDiIpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.591b6729.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Footer.scss';\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <>\r\n      <section id=\"footer\">\r\n        <div id=\"copyright\">\r\n          <p>\r\n            &copy; 2020 <a href=\"/\">Matias</a>\r\n          </p>\r\n          <h2 className=\"social-section\">\r\n            <a\r\n              className=\"uil uil-github light-violet\"\r\n              title=\"Github\"\r\n              href=\"https://github.com/baviera08\"\r\n            ></a>\r\n            <a\r\n              className=\"uil uil-linkedin dark-sky\"\r\n              title=\"LinkedIn\"\r\n              href=\"https://linkedin.com/in/matiasbavera\"\r\n            ></a>\r\n            <a\r\n              className=\"uil uil-twitter light-sky\"\r\n              title=\"Twitter\"\r\n              href=\"https://twitter.com/matibavera\"\r\n            ></a>\r\n          </h2>\r\n        </div>\r\n        <div>\r\n          <p>\r\n            <strong>Open Source</strong>\r\n          </p>\r\n          <ul>\r\n            <li>\r\n              <a href=\"https://github.com/osrf/romi-dashboard\">romi-dashboard</a>\r\n              <div className=\"tooltip\">test</div>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n        <div>\r\n          <p>\r\n            <strong>Apps</strong>\r\n          </p>\r\n          <ul>\r\n            <li>\r\n              <a href=\"\">Test</a>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n        <div>\r\n          <p>\r\n            <strong>Doodles</strong>\r\n          </p>\r\n          <ul>\r\n            <li>\r\n              <a href=\"\">Test</a>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </section>\r\n    </>\r\n  );\r\n};\r\nexport default Footer;\r\n","import React from 'react';\r\nimport './Projects.scss';\r\n\r\nconst Header = () => {\r\n  return (\r\n    <div>\r\n      <div className=\"profile enhance\">\r\n        <img src=\"/me/resources/profile.png\" />\r\n        <h2>Matias Bavera</h2>\r\n        <p>\r\n          Full Stack Software Engineer &middot;{' '}\r\n          <a href=\"https://www.ekumenlabs.com/\">\r\n            <strong className=\"ekumen\">@Ekumen</strong>\r\n          </a>{' '}\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React, { useState } from 'react';\r\nimport './Projects.scss';\r\nimport Header from './Header';\r\n\r\nconst Projects = () => {\r\n  return (\r\n    <>\r\n      <title>Matias Bavera</title>\r\n      <div id=\"display\"></div>\r\n      <div id=\"projects\">\r\n        <Header />\r\n        <div className={`large right project`}>\r\n          <img className=\"screenshot\" src=\"/me/resources/pictures/romi-dashboard.png\" />\r\n          <div className=\"description\">\r\n            <h2>\r\n              <a href=\"https://www.openrobotics.org/\">RoMi Dashboard OSRF</a>&nbsp;&middot;\r\n              <a\r\n                className=\"uil uil-github light-violet\"\r\n                title=\"Github\"\r\n                href=\"https://github.com/osrf/romi-dashboard\"\r\n              ></a>\r\n            </h2>\r\n            <h6>\r\n              {' '}\r\n              Web application that provides overall visualization and control over robots, doors, lift, etc.\r\n            </h6>\r\n            <p>\r\n              Collabored with the development of this Open Source project owned by OSRF (Open Source Robotic Fundation).\r\n            </p>\r\n            <br />\r\n            <p>\r\n              <span className=\"tag\">React</span>\r\n              <span className=\"tag\">TypeScript</span>\r\n              <span className=\"tag\">Leaflet</span>\r\n              <span className=\"tag\">Ros2</span>\r\n              <span className=\"tag\">Nodejs</span>\r\n              <span className=\"tag\">Websockets</span>\r\n            </p>\r\n          </div>\r\n        </div>\r\n\r\n        <div className={`large right project`}>\r\n          <img className=\"screenshot\" src=\"/me/resources/pictures/ts.png\" />\r\n          <div className=\"description\">\r\n            <h2>\r\n              <a href=\"\">Crash Course Typescript</a>&nbsp;&middot;\r\n              <a\r\n                className=\"uil uil-github light-violet\"\r\n                title=\"Github\"\r\n                href=\"https://github.com/matiasbavera/typescript-crash-course\"\r\n              ></a>\r\n            </h2>\r\n            <h6>\r\n              {' '}\r\n              A crash course in TypeScript.\r\n            </h6>\r\n            <p>\r\n              TypeScript is a typed superset of JavaScript that compiles to plain JavaScript.\r\n            </p>\r\n            <br />\r\n            <p>\r\n              <span className=\"tag\">TypeScript</span>\r\n            </p>\r\n          </div>\r\n        </div>\r\n\r\n        {/* <div className={`large right project`}>\r\n          <img className=\"screenshot\" src=\"/me/resources/pictures/romi-dashboard.png\" />\r\n          <div className=\"description\">\r\n            <h2>\r\n              <a href=\"\">Course management system</a>&nbsp;&middot;\r\n              <a\r\n                className=\"uil uil-github light-violet\"\r\n                title=\"Github\"\r\n                href=\"https://github.com/matiasbavera/typescript-crash-course\"\r\n              ></a>\r\n            </h2>\r\n            <h6>\r\n              {' '}\r\n              Web application for course management.\r\n            </h6>\r\n            <p> \r\n              Web application for course management, it has modules for billing, enrollment, students, teachers, debt creation, fees and reports.\r\n            </p>\r\n            <br />\r\n            <p>\r\n              <span className=\"tag\">Python 3</span>\r\n              <span className=\"tag\">Django</span>\r\n              <span className=\"tag\">JavaScript</span>\r\n            </p>\r\n          </div>\r\n        </div> */}\r\n\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Projects;\r\n","import React from 'react';\r\nimport './App.scss';\r\nimport './shared/oui/main.sass';\r\n\r\nimport Footer from './portfolio/Footer';\r\nimport Projects from './portfolio/Projects';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Projects />\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}